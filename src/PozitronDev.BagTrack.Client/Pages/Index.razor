@page "/"
@using PozitronDev.BagTrack.Contracts
@using PozitronDev.SharedKernel.Data;
@inject HttpClient Http

<PageTitle>Pozitron BagTrack - Arrival Bags</PageTitle>

<h1>Arrival Bags</h1>
<p></p>

<EditForm Model="@Model" OnValidSubmit="@SubmitAsync">
    <div class="row g-3 align-items-center">
        <FluentValidationValidator Validator="_validator" />
        <ValidationSummary />

        <div class="col-auto">
            <InputDate @bind-Value="Model!.Date" class="col-auto form-control" />
        </div>
        <div class="col-auto">
            <InputText @bind-Value="Model!.BagTagId" DisplayName="BagTag Id" placeholder="BagTag Id" class="col-auto form-control" />
        </div>
        <div class="col-auto">
            <InputText @bind-Value="Model!.Carousel" DisplayName="Carousel" placeholder="Carousel" class="col-auto form-control" />
        </div>
        <div class="col-auto">
            <InputText @bind-Value="Model!.Flight" DisplayName="Flight" placeholder="Flight" class="col-auto form-control" />
        </div>
        <div class="col-auto">
            <InputText @bind-Value="Model!.Airline" DisplayName="Airline IATA" placeholder="Airline IATA" class="col-auto form-control" />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
        <div class="col-auto">
            <button class="btn btn-secondary" @onclick="Clear">Clear</button>
        </div>
    </div>
</EditForm>
<p></p>

<table class="table table-striped">
    <thead>
        <tr>
            <th>BagTag Id</th>
            <th>Device Id</th>
            <th>Date</th>
            <th>Carousel</th>
            <th>Flight</th>
            <th>Airline IATA</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var bag in Bags)
        {
            <tr>
                <td>@bag.BagTagId</td>
                <td>@bag.DeviceId</td>
                <td>@bag.Date.ToLongDateString()</td>
                <td>@bag.Carousel</td>
                <td>@bag.Flight</td>
                <td>@bag.Airline</td>
            </tr>
        }
    </tbody>
</table>

<div class="row">
    <div class="col">
        <Paging Pagination="Pagination" Spread="2" SelectedPage="SelectedPage" />
    </div>
</div>
<div class="row">
    <div class="col text-center">
        <p>Total Records: @Pagination.TotalItems</p>
    </div>
</div>

@code {
    private static BagListRequestValidator _validator = new();

    public List<BagDto> Bags { get; set; } = default!;
    public BagListRequest Model { get; set; } = default!;
    public Pagination Pagination { get; set; } = default!;

    protected override void OnInitialized()
    {
        Clear();
    }

    private async Task SubmitAsync()
    {
        await PopulateBagsAsync(1);
    }

    private void Clear()
    {
        Bags = new();
        Model = new();
        Pagination = Pagination.Default;
        Model.Date = DateOnly.FromDateTime(DateTime.Now.Date);
    }

    private async Task SelectedPage(int page)
    {
        await PopulateBagsAsync(page);
    }

    private async Task PopulateBagsAsync(int page)
    {
        string queryParameters = $"?date={Model.Date}&bagTagId={Model.BagTagId}&carousel={Model.Carousel}&flight={Model.Flight}&airline={Model.Airline}&page={page}";
        var result = await Http.GetFromJsonAsync<PagedResponse<BagDto>>($"bags{queryParameters}");

        if (result is null)
        {
            Clear();
            return;
        }

        Bags = result.Data;
        Pagination = result.Pagination;
    }
}
